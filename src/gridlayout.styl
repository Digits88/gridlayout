/* GridLayout
 * 
 * IonuÈ› Colceriu - ghinda.net
 * https://github.com/ghinda/gridlayout
 */

@import 'nib';

/* media-query mixin
 */

media-query($size) {
  
  /* max-width 320px
   */
  if $size == max-xs {
    @media only screen and (max-width: 20em) {
      {block}
    }
  }
  
  /* max-width 640px
   */
  if $size == max-sm {
    @media only screen and (max-width: 40em) {
      {block}
    }
  }
  
  /* min-width 641px
   */
  if $size == md {
    @media only screen and (min-width: 40.063em) {
      {block}
    }
  }
  
  /* min-width 1025px
   */
  if $size == lg {
    @media only screen and (min-width: 64.063em) {
      {block}
    }
  }
  
}

/* grid layout globals
 */

.gl,
.gl-cell,
.gl-scrollview,
.gl-scrollview-content {
  box-sizing: border-box;

  /* scrollviews in ios
   */
  overflow-scrolling: touch;
  
  /* try to fix issues with ghost cells created by whitespace
   * in IE9
   */
  white-space: nowrap;
}

.gl {
  display: table;
  width: 100%;
  border-collapse: collapse;
  table-layout: fixed;
}

.gl-vertical {
  height: 100%;
}

.gl-cell {
  display: table-cell;
  position: relative;
}

.gl-vertical > .gl-cell {
  display: table-row;
}

/* nested grids take up the full height
 */

/* IE8 does not expand nested grids to take up the full height,
 * unless included in a scrollview.
 */

.gl-cell .gl {
  height: 100%;
  
  /* IE9+ adds spacing around nested tables otherwise,
   * causing scrollbars on scrollviews.
   */
  overflow: hidden;
}

/* needs an absolute container, because IE and FF don't
 * support overflow: auto on table cells.
 * only an absolute container will take up the entire cell size.
 */

.gl-vertical > .gl-cell > .gl-scrollview {
  display: table-cell;
  position: relative;
}

.gl-scrollview-content {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  width: 100%;
  height: 100%;
  overflow: auto;
}

/* IE8 and FF don't set the right height
 * on cells without non-absolute content.
 * IE9+ needs real, non-whitespace, (eg. \A) content.
 */

.gl-scrollview:after {
  content: '*';
  visibility: hidden;
}

.gl-nested {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}


/* grid collapse
 */

gl-collapse() {
  
  /* we need !important because of the size classes.
   */
  > .gl-cell {
    display: block;
    width: auto !important;
  }
  
  > .gl-cell .gl-scrollview,
  > .gl-cell > .gl-scrollview,
  > .gl-cell > .gl-scrollview > .gl-scrollview-content {
    position: relative;
  }
  
  > .gl-cell > .gl-scrollview:after {
    display: none;
  }
  
}

+media-query(max-xs) {
  
  .gl-xs-collapse {
    gl-collapse();
  }
  
}

+media-query(max-sm) {
  
  .gl-sm-collapse {
    gl-collapse();
  }
  
}


/* cell sizes, 12 rows/columns.
 */

grid-sizes($size) {
  
  for $i in (1..12) {

    .gl-cell.gl-{$size}-{$i} {
      width: (100 / 12) * $i * 1%;
    }
    
    .gl-vertical > .gl-cell.gl-{$size}-{$i} {
      height: (100 / 12) * $i * 1%;
    }
    
  }
  
}

/* default small grid
 */

grid-sizes(sm);

+media-query(md) {
  grid-sizes(md);
}

+media-query(lg) {
  grid-sizes(lg);
}

/* vertical alignment
 */

.gl-align-middle {
  vertical-align: middle;
}

.gl-align-bottom {
  vertical-align: bottom;
}

/* spacing
 */
/*
.gl-spaced > .gl-row,
.gl-spaced > .gl-row > .gl-scrollview,
.gl-spaced > .gl-row > .gl-col > .gl-scrollview {
  padding-top: 1em;
}

.gl-spaced > .gl-row:first-child,
.gl-spaced > .gl-row:first-child > .gl-scrollview,
.gl-spaced > .gl-row:first-child > .gl-col > .gl-scrollview {
  padding-top: 0;
}

.gl-spaced > .gl-col,
.gl-spaced > .gl-col > .gl-scrollview,
.gl-spaced > .gl-row > .gl-col,
.gl-spaced > .gl-row > .gl-col > .gl-scrollview {
  padding-left: 1em;
}

.gl-spaced > .gl-col:first-child,
.gl-spaced > .gl-col:first-child > .gl-scrollview,
.gl-spaced > .gl-row > .gl-col:first-child,
.gl-spaced > .gl-row > .gl-col:first-child > .gl-scrollview {
  padding-left: 0;
}*/

